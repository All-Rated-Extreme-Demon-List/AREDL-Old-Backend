// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {
            "name": "Discord server",
            "url": "https://discord.gg/VbqrUBtTfX"
        },
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/aredl/history": {
            "get": {
                "description": "Lists the placement, move \u0026 legacy history of a level by either using its internal or gd id. Possible actions: placed, placedAbove, movedUp, movedDown, movedPastUp, movedPastDown, movedToLegacy, movedFromLegacy",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "aredl_public"
                ],
                "summary": "History of a level",
                "parameters": [
                    {
                        "type": "string",
                        "description": "internal level id",
                        "name": "id",
                        "in": "query"
                    },
                    {
                        "minimum": 1,
                        "type": "integer",
                        "description": "gd level id",
                        "name": "level_id",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/aredl_public.HistoryEntry"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/util.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/aredl/leaderboard": {
            "get": {
                "description": "Gives leaderboard as a paged list ordered by rank. Players with zero list points are omitted",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "aredl_public"
                ],
                "summary": "Aredl leaderboard",
                "parameters": [
                    {
                        "minimum": 1,
                        "type": "integer",
                        "default": 1,
                        "description": "select page",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "get the page the given user is on instead of the given page, does not work with name filter active",
                        "name": "user_id",
                        "in": "query"
                    },
                    {
                        "maximum": 200,
                        "minimum": 1,
                        "type": "integer",
                        "default": 40,
                        "description": "number of results per page",
                        "name": "per_page",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "filters names to only contain the given substring",
                        "name": "name_filter",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/aredl_public.Leaderboard"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/util.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/aredl/level": {
            "get": {
                "description": "Detailed information on a level. I naddition optional data such as records, creators, verification and packs can be requested.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "aredl_public"
                ],
                "summary": "Level details",
                "operationId": "aredl.level",
                "parameters": [
                    {
                        "type": "string",
                        "description": "internal level id",
                        "name": "id",
                        "in": "query"
                    },
                    {
                        "minimum": 1,
                        "type": "integer",
                        "description": "gd level id",
                        "name": "level_id",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "default": false,
                        "description": "if level was requested using level_id this specifies whether it should load the two player version",
                        "name": "two_player",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "default": false,
                        "description": "include records",
                        "name": "records",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "default": false,
                        "description": "include creators",
                        "name": "creators",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "default": false,
                        "description": "include verification",
                        "name": "verification",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "default": false,
                        "description": "include packs",
                        "name": "packs",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/aredl_public.Level"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/util.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/aredl/list": {
            "get": {
                "description": "Gives a list of every placed level ordered by position. To get more details on a level use /aredl/level",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "aredl_public"
                ],
                "summary": "Full simple list",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/aredl_public.ListEntry"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/util.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/aredl/mod/level/place": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": [
                            "authorization"
                        ]
                    }
                ],
                "description": "Places a new level into aredl. It automatically updates history and leaderboards\nRequires user permission: aredl.manage_levels",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "aredl_moderation"
                ],
                "summary": "Place AREDL level",
                "parameters": [
                    {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "csv",
                        "description": "list of all creators using their internal user ids",
                        "name": "creator_ids",
                        "in": "query",
                        "required": true
                    },
                    {
                        "minimum": 1,
                        "type": "integer",
                        "description": "gd level id",
                        "name": "level_id",
                        "in": "query",
                        "required": true
                    },
                    {
                        "minimum": 1,
                        "type": "integer",
                        "description": "position to place the level at",
                        "name": "position",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "displayed name of the level",
                        "name": "name",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "publisher user id",
                        "name": "publisher",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "gd level password",
                        "name": "level_password",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "default": false,
                        "description": "whether the level should be placed as legacy",
                        "name": "legacy",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "user id of the verifier",
                        "name": "verification_submitted_by",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "format": "url",
                        "description": "video url of the verification",
                        "name": "verification_video_url",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "boolean",
                        "description": "whether verification was done on mobile",
                        "name": "verification_mobile",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "verification raw footage",
                        "name": "verification_raw_footage",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/util.ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/util.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/aredl/mod/level/update": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": [
                            "authorization"
                        ]
                    }
                ],
                "description": "Updates level data. It automatically updates history and leaderboards.\nRequires user permission: aredl.manage_levels",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "aredl_moderation"
                ],
                "summary": "Update AREDL level",
                "parameters": [
                    {
                        "type": "string",
                        "description": "internal level id",
                        "name": "id",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "csv",
                        "description": "list of all creators using their internal user ids",
                        "name": "creator_ids",
                        "in": "query"
                    },
                    {
                        "minimum": 1,
                        "type": "integer",
                        "description": "gd level id",
                        "name": "level_id",
                        "in": "query"
                    },
                    {
                        "minimum": 1,
                        "type": "integer",
                        "description": "position to move to if different form current position",
                        "name": "position",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "displayed name of the level",
                        "name": "name",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "publisher user id",
                        "name": "publisher",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "gd level password",
                        "name": "level_password",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "reference to custom song",
                        "name": "custom_song",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "description": "whether the level should be placed as legacy",
                        "name": "legacy",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/util.ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/util.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/aredl/mod/list/update": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": [
                            "authorization"
                        ]
                    }
                ],
                "description": "Updates all points. Should be used if other automatic updates didn't work.\nRequires user permission: aredl.update_listpoints",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "aredl_moderation"
                ],
                "summary": "Update AREDL points and leaderboard",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "min list position from what to update",
                        "name": "min_position",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "max list position from what to update",
                        "name": "max_position",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/util.ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/util.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/aredl/mod/pack/create": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": [
                            "authorization"
                        ]
                    }
                ],
                "description": "Creates a new pack and updates all user points that now have the new pack.\nRequires user permission: aredl.manage_packs",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "aredl_moderation"
                ],
                "summary": "Create a new AREDL pack",
                "parameters": [
                    {
                        "type": "string",
                        "description": "display name",
                        "name": "name",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "display color",
                        "name": "color",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "position of pack",
                        "name": "placement_order",
                        "in": "query"
                    },
                    {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "csv",
                        "description": "list of internal level ids. Pack has to have at least two levels",
                        "name": "levels",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/util.ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/util.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/aredl/mod/pack/delete": {
            "delete": {
                "security": [
                    {
                        "ApiKeyAuth": [
                            "authorization"
                        ]
                    }
                ],
                "description": "Deletes a pack and updates all user points that now have the new pack.\nRequires user permission: aredl.manage_packs",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "aredl_moderation"
                ],
                "summary": "Delete an AREDL pack",
                "parameters": [
                    {
                        "type": "string",
                        "description": "internal pack id",
                        "name": "id",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/util.ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/util.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/aredl/mod/pack/update": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": [
                            "authorization"
                        ]
                    }
                ],
                "description": "Updates a pack and updates all user points that now have or lost the new pack.\nRequires user permission: aredl.manage_packs",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "aredl_moderation"
                ],
                "summary": "Update a AREDL pack",
                "parameters": [
                    {
                        "type": "string",
                        "description": "internal pack id",
                        "name": "id",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "display name",
                        "name": "name",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "display color",
                        "name": "color",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "position of pack",
                        "name": "placement_order",
                        "in": "query"
                    },
                    {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "csv",
                        "description": "new list of internal level ids. Pack has to have at least two levels",
                        "name": "levels",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/util.ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/util.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/aredl/mod/submission/accept": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": [
                            "authorization"
                        ]
                    }
                ],
                "description": "Requires user permission: aredl.submission_review",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "aredl_moderation"
                ],
                "summary": "Accept AREDL submission.",
                "parameters": [
                    {
                        "type": "string",
                        "description": "internal submission id",
                        "name": "id",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "format": "url",
                        "description": "video url",
                        "name": "video_url",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "description": "whether submisssion was one on mobile",
                        "name": "mobile",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "gd id of used ldm",
                        "name": "ldm_id",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "format": "url",
                        "description": "raw footage",
                        "name": "raw_footage",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/util.ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/util.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/aredl/mod/submission/reject": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": [
                            "authorization"
                        ]
                    }
                ],
                "description": "Requires user permission: aredl.submission_review",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "aredl_moderation"
                ],
                "summary": "Reject AREDL submission.",
                "parameters": [
                    {
                        "type": "string",
                        "description": "internal submission id",
                        "name": "id",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "rejection reason",
                        "name": "rejection_reason",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/util.ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/util.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/aredl/names": {
            "get": {
                "description": "Gives a map of important users grouped by their role. This also includes aredl plus members",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "aredl_public"
                ],
                "summary": "Important users",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/definitions/aredl_public.NameUser"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/util.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/aredl/packs": {
            "get": {
                "description": "Gives a list of all packs",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "aredl_public"
                ],
                "summary": "Aredl packs",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/aredl_public.Pack"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/util.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/aredl/user": {
            "get": {
                "description": "Gives detailed information about a user",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "aredl_public"
                ],
                "summary": "User info",
                "parameters": [
                    {
                        "type": "string",
                        "description": "user id",
                        "name": "id",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/aredl_public.User"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/util.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/aredl/user/records": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": [
                            "authorization"
                        ]
                    }
                ],
                "description": "Lists records ordered by the time they have been updated last.\nRequires user permission: aredl.user_record_list",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "aredl_user"
                ],
                "summary": "List records",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/aredl_user.Record"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/util.ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/util.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/aredl/user/submission": {
            "delete": {
                "security": [
                    {
                        "ApiKeyAuth": [
                            "authorization"
                        ]
                    }
                ],
                "description": "Deletes a submission as long as it still is open for review.\nRequires user permission: aredl.user_submission_delete",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "aredl_user"
                ],
                "summary": "Delete submission",
                "parameters": [
                    {
                        "type": "string",
                        "description": "submission id",
                        "name": "id",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/util.ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/util.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/aredl/user/submissions": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": [
                            "authorization"
                        ]
                    }
                ],
                "description": "Lists submissions ordered by the time they have been updated last.\nRequires user permission: aredl.user_submission_list",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "aredl_user"
                ],
                "summary": "List submissions",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/aredl_user.Submission"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/util.ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/util.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/aredl/user/submit": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": [
                            "authorization"
                        ]
                    }
                ],
                "description": "Creates a submission. If a submission for a level already exists, it will be updated instead. Submissions can only be updated when its status is pending or rejected_retryable\nRequires user permission: aredl.user_submit\nIf the user has the permission aredl.priority they will automatically be assigned to the priority queue",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "aredl_user"
                ],
                "summary": "Create or Update submission",
                "parameters": [
                    {
                        "type": "string",
                        "description": "internal level id",
                        "name": "level",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "format": "url",
                        "description": "display video url",
                        "name": "video_url",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "boolean",
                        "description": "whether submission was done on mobile",
                        "name": "mobile",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "ldm gd level id if used",
                        "name": "ldm_id",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "format": "url",
                        "description": "raw footage",
                        "name": "raw_footage",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "additional notes the user wants to add to a submission. Max 100 characters",
                        "name": "additional_notes",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/util.ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/util.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/mod/user/ban": {
            "post": {
                "description": "Bans a user and removes them from the leaderboard\nRequires user permission: user_ban\nAdditionally the user needs to be able to affect the user with their permission",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "moderation"
                ],
                "summary": "Ban user",
                "parameters": [
                    {
                        "type": "string",
                        "description": "internal user id",
                        "name": "id",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/util.ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/util.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/mod/user/create-placeholder": {
            "post": {
                "description": "Creates a placeholder user for users that are not registered on the list yet\nRequires user permission: create_placeholder",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "moderation"
                ],
                "summary": "Create a placeholder user",
                "parameters": [
                    {
                        "type": "string",
                        "description": "display name",
                        "name": "username",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/moderation.CreatePlaceholderResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/util.ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/util.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/mod/user/list": {
            "get": {
                "description": "Paged list of all users filtered by name. Userd to get user ids and select a user for other actions\nRequires user permission: user_list",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "moderation"
                ],
                "summary": "List users",
                "parameters": [
                    {
                        "minimum": 1,
                        "type": "integer",
                        "default": 1,
                        "description": "select page",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "maximum": 200,
                        "minimum": 1,
                        "type": "integer",
                        "default": 40,
                        "description": "number of results per page",
                        "name": "per_page",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "filters names to only contain the given substring",
                        "name": "name_filter",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/moderation.UserEntry"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/util.ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/util.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/mod/user/name-change/accept": {
            "post": {
                "description": "Accepts a name change request from a user\nRequires user permission: name_change_review",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "moderation"
                ],
                "summary": "Accept name change request",
                "parameters": [
                    {
                        "type": "string",
                        "description": "request id",
                        "name": "id",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/util.ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/util.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/mod/user/name-change/list": {
            "get": {
                "description": "Lists all open name change requests\nRequires user permission: name_change_review",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "moderation"
                ],
                "summary": "List name change requests",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/moderation.NameChangeRequest"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/util.ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/util.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/mod/user/name-change/reject": {
            "post": {
                "description": "Rejects a name change request from a user\nRequires user permission: name_change_review",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "moderation"
                ],
                "summary": "Reject name change request",
                "parameters": [
                    {
                        "type": "string",
                        "description": "request id",
                        "name": "id",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/util.ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/util.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/mod/user/role": {
            "post": {
                "description": "Promote or demote a user\nRequires user permission: user_change_role\nAdditionally the user needs to be able to affect the user with their permission and give the user the new role",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "moderation"
                ],
                "summary": "Change user role",
                "parameters": [
                    {
                        "type": "string",
                        "description": "internal user id",
                        "name": "id",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "new role",
                        "name": "role",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/util.ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/util.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/mod/user/unban": {
            "post": {
                "description": "Unbans a user\nRequires user permission: user_ban\nAdditionally the user needs to be able to affect the user with their permission",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "moderation"
                ],
                "summary": "Unban user",
                "parameters": [
                    {
                        "type": "string",
                        "description": "internal user id",
                        "name": "id",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/util.ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/util.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/user/api-key": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": [
                            "authorization"
                        ]
                    }
                ],
                "description": "Gets the authenticated users api key. If the user does not have one it generates a new one.\nRequires user permission: user_request_api_key",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "user"
                ],
                "summary": "Get Api Key",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/user.ApiKeyResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/util.ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/util.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/user/merge-request": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": [
                            "authorization"
                        ]
                    }
                ],
                "description": "Creates a merge request for the user with a placeholder user. Needs to be reviewed by a moderator.\nRequires user permission: user_request_merge",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "user"
                ],
                "summary": "Merge Request",
                "parameters": [
                    {
                        "type": "string",
                        "description": "name of the placeholder user to be merged with",
                        "name": "placeholder_name",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/util.ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/util.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/user/name-change-request": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": [
                            "authorization"
                        ]
                    }
                ],
                "description": "Creates a name change request for the user. Needs to be reviewed by a moderator.\nRequires user permission: user_request_name_change",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "user"
                ],
                "summary": "Name Change Request",
                "parameters": [
                    {
                        "type": "string",
                        "description": "name to change to",
                        "name": "new_name",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/util.ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/util.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/user/permissions": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": [
                            "authorization"
                        ]
                    }
                ],
                "description": "Returns all the available permissions to the authenticated user, if there is no authenticaiton provided, the permissions will be empty",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "user"
                ],
                "summary": "Get a list of Permissions",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "$ref": "#/definitions/middlewares.PermissionData"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/util.ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/util.ErrorResponse"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "aredl_public.HistoryEntry": {
            "type": "object",
            "properties": {
                "action": {
                    "type": "string",
                    "enum": [
                        "placed",
                        "placedAbove",
                        "movedUp",
                        "movedDown",
                        "movedPastUp",
                        "movedPastDown",
                        "movedToLegacy",
                        "movedFromLegacy"
                    ]
                },
                "cause": {
                    "type": "object",
                    "properties": {
                        "id": {
                            "type": "string"
                        },
                        "level_id": {
                            "type": "integer"
                        },
                        "name": {
                            "type": "string"
                        }
                    }
                },
                "new_position": {
                    "type": "integer"
                },
                "timestamp": {
                    "$ref": "#/definitions/types.DateTime"
                }
            }
        },
        "aredl_public.Leaderboard": {
            "type": "object",
            "properties": {
                "list": {
                    "type": "array",
                    "items": {
                        "type": "object",
                        "properties": {
                            "points": {
                                "type": "number"
                            },
                            "rank": {
                                "type": "integer"
                            },
                            "user": {
                                "type": "object",
                                "properties": {
                                    "country": {
                                        "type": "string"
                                    },
                                    "global_name": {
                                        "type": "string"
                                    },
                                    "id": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    }
                },
                "page": {
                    "type": "integer"
                },
                "pages": {
                    "type": "integer"
                }
            }
        },
        "aredl_public.Level": {
            "type": "object",
            "properties": {
                "creators": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/aredl_public.LevelUser"
                    }
                },
                "custom_song": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "legacy": {
                    "type": "boolean"
                },
                "level_id": {
                    "type": "integer"
                },
                "level_password": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "packs": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/aredl_public.LevelPack"
                    }
                },
                "points": {
                    "type": "number"
                },
                "position": {
                    "type": "integer"
                },
                "publisher": {
                    "$ref": "#/definitions/aredl_public.LevelUser"
                },
                "records": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/aredl_public.LevelRecord"
                    }
                },
                "verification": {
                    "$ref": "#/definitions/aredl_public.LevelRecord"
                }
            }
        },
        "aredl_public.LevelPack": {
            "type": "object",
            "properties": {
                "color": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "points": {
                    "type": "number"
                }
            }
        },
        "aredl_public.LevelRecord": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                },
                "mobile": {
                    "type": "boolean"
                },
                "submitted_by": {
                    "$ref": "#/definitions/aredl_public.LevelUser"
                },
                "video_url": {
                    "type": "string"
                }
            }
        },
        "aredl_public.LevelUser": {
            "type": "object",
            "properties": {
                "global_name": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                }
            }
        },
        "aredl_public.ListEntry": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                },
                "legacy": {
                    "type": "boolean"
                },
                "level_id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "points": {
                    "type": "number"
                },
                "position": {
                    "type": "integer"
                },
                "two_player": {
                    "type": "boolean"
                }
            }
        },
        "aredl_public.NameUser": {
            "type": "object",
            "properties": {
                "global_name": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                }
            }
        },
        "aredl_public.Pack": {
            "type": "object",
            "properties": {
                "color": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "levels": {
                    "type": "array",
                    "items": {
                        "type": "object",
                        "properties": {
                            "id": {
                                "type": "string"
                            },
                            "legacy": {
                                "type": "boolean"
                            },
                            "level_id": {
                                "type": "integer"
                            },
                            "name": {
                                "type": "string"
                            },
                            "points": {
                                "type": "number"
                            },
                            "position": {
                                "type": "integer"
                            }
                        }
                    }
                },
                "name": {
                    "type": "string"
                },
                "points": {
                    "type": "number"
                }
            }
        },
        "aredl_public.User": {
            "type": "object",
            "properties": {
                "aredl_verified": {
                    "type": "boolean"
                },
                "avatar_url": {
                    "type": "string"
                },
                "badges": {
                    "type": "string"
                },
                "banned_from_list": {
                    "type": "boolean"
                },
                "banner_color": {
                    "type": "string"
                },
                "country": {
                    "type": "string"
                },
                "created_levels": {
                    "type": "array",
                    "items": {
                        "type": "object",
                        "properties": {
                            "id": {
                                "type": "string"
                            },
                            "legacy": {
                                "type": "boolean"
                            },
                            "level_id": {
                                "type": "integer"
                            },
                            "name": {
                                "type": "string"
                            },
                            "points": {
                                "type": "number"
                            },
                            "position": {
                                "type": "integer"
                            }
                        }
                    }
                },
                "description": {
                    "type": "string"
                },
                "discord_id": {
                    "type": "string"
                },
                "global_name": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "joined": {
                    "$ref": "#/definitions/types.DateTime"
                },
                "linked_twitch": {
                    "type": "string"
                },
                "linked_twitter": {
                    "type": "string"
                },
                "linked_youtube": {
                    "type": "string"
                },
                "packs": {
                    "type": "array",
                    "items": {
                        "type": "object",
                        "properties": {
                            "color": {
                                "type": "string"
                            },
                            "id": {
                                "type": "string"
                            },
                            "name": {
                                "type": "string"
                            },
                            "points": {
                                "type": "number"
                            }
                        }
                    }
                },
                "placeholder": {
                    "type": "boolean"
                },
                "published_levels": {
                    "type": "array",
                    "items": {
                        "type": "object",
                        "properties": {
                            "id": {
                                "type": "string"
                            },
                            "legacy": {
                                "type": "boolean"
                            },
                            "level_id": {
                                "type": "integer"
                            },
                            "name": {
                                "type": "string"
                            },
                            "points": {
                                "type": "number"
                            },
                            "position": {
                                "type": "integer"
                            }
                        }
                    }
                },
                "rank": {
                    "type": "object",
                    "properties": {
                        "points": {
                            "type": "number"
                        },
                        "position": {
                            "type": "integer"
                        }
                    }
                },
                "records": {
                    "type": "array",
                    "items": {
                        "type": "object",
                        "properties": {
                            "level": {
                                "type": "object",
                                "properties": {
                                    "id": {
                                        "type": "string"
                                    },
                                    "legacy": {
                                        "type": "boolean"
                                    },
                                    "level_id": {
                                        "type": "integer"
                                    },
                                    "name": {
                                        "type": "string"
                                    },
                                    "points": {
                                        "type": "number"
                                    },
                                    "position": {
                                        "type": "integer"
                                    }
                                }
                            },
                            "mobile": {
                                "type": "boolean"
                            },
                            "placement_order": {
                                "type": "integer"
                            },
                            "video_url": {
                                "type": "string"
                            }
                        }
                    }
                },
                "roles": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "aredl_user.Record": {
            "type": "object",
            "properties": {
                "created": {
                    "$ref": "#/definitions/types.DateTime"
                },
                "id": {
                    "type": "string"
                },
                "ldm_id": {
                    "type": "integer"
                },
                "level": {
                    "type": "object",
                    "properties": {
                        "id": {
                            "type": "string"
                        },
                        "level_id": {
                            "type": "integer"
                        },
                        "name": {
                            "type": "string"
                        }
                    }
                },
                "mobile": {
                    "type": "boolean"
                },
                "raw_footage": {
                    "type": "string"
                },
                "updated": {
                    "$ref": "#/definitions/types.DateTime"
                },
                "video_url": {
                    "type": "string"
                }
            }
        },
        "aredl_user.Submission": {
            "type": "object",
            "properties": {
                "created": {
                    "$ref": "#/definitions/types.DateTime"
                },
                "id": {
                    "type": "string"
                },
                "is_update": {
                    "type": "boolean"
                },
                "ldm_id": {
                    "type": "integer"
                },
                "level": {
                    "type": "object",
                    "properties": {
                        "id": {
                            "type": "string"
                        },
                        "level_id": {
                            "type": "integer"
                        },
                        "name": {
                            "type": "string"
                        }
                    }
                },
                "mobile": {
                    "type": "boolean"
                },
                "raw_footage": {
                    "type": "string"
                },
                "rejected": {
                    "type": "boolean"
                },
                "updated": {
                    "$ref": "#/definitions/types.DateTime"
                },
                "video_url": {
                    "type": "string"
                }
            }
        },
        "middlewares.PermissionData": {
            "type": "object",
            "properties": {
                "affected_roles": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "moderation.CreatePlaceholderResponse": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                }
            }
        },
        "moderation.NameChangeRequest": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                },
                "new_name": {
                    "type": "string"
                },
                "user": {
                    "type": "object",
                    "properties": {
                        "id": {
                            "type": "string"
                        },
                        "name": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "moderation.UserEntry": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "types.DateTime": {
            "type": "object"
        },
        "user.ApiKeyResponse": {
            "type": "object",
            "properties": {
                "api_key": {
                    "type": "string"
                },
                "newly_generated": {
                    "type": "boolean"
                }
            }
        },
        "util.ErrorResponse": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer"
                },
                "data": {
                    "type": "object",
                    "additionalProperties": {}
                },
                "message": {
                    "type": "string"
                }
            }
        }
    },
    "securityDefinitions": {
        "ApiKeyAuth": {
            "description": "Perform actions as a user. It is also used to access endpoints that require user permissions.",
            "type": "apiKey",
            "name": "authorization",
            "in": "header"
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "0.1",
	Host:             "api.aredl.net",
	BasePath:         "/api",
	Schemes:          []string{},
	Title:            "Aredl API",
	Description:      "Backend for the all rated extreme demon list",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
